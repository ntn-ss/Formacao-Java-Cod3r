Operadores unários: realizam sua função com um operando apenas, ex.: {++}.

Operadores binários: realizam sua função com dois operandos, ex.: { +, -, *, / e % }.

Operadores ternários: realizam sua função com três operandos, estrutura.: { operando ? operando : operando }.

Dividem-se em operadores aritméticos, relacionais, lógicos e de atribuição.

Operadores lógicos dependem da "tabela verdade". Em Java, o operador lógico "E" (AND) é manifestado pela sintaxe de dois e comerciais (&&), ex.: você só vai ao shopping se tiver dinheiro o bastante e estiver em um dia ensolarado, as duas condições precisam ser verdadeiras, caso qualquer uma não esteja satisfeita, a proposição será falsa. Em outro cenário, há o operador "OU" (OR), cuja sintaxe em Java é de duas barras verticais (||), ele retorna verdadeiro para uma proposição caso ao menos uma das condições esteja verdadeira. Há, também, o "OU EXCLUSIVO" (XOR), cuja sintaxe em Java é ^, ele se define num cenário em que as duas condições não podem possuir o mesmo valor booleano: não podem ser os dois verdadeiros ou falsos simultaneamente. Por fim, há a negação de um valor booleano, retornando o seu contrário: o contrário de falso é verdadeiro, o de verdadeiro é falso. Sua sintaxe em Java é uma exclamação (!), é operador unário.