Até este momento, para iniciar um novo exercício, criamos uma nova classe. Essa classe está em um arquivo ".JAVA" dentro da pasta SRC de um projeto de trabalho criado pela IDE, e ao executar esse arquivo, é gerada uma contraparte terminada em ".CLASS" na pasta Bin do projeto. A diferença entre os dois conceitos precisa dessa explicação, pois o arquivo ".CLASS" tem ligação com ambos: JRE significa "Java Runtime Environment", ou "Ambiente de Execução Java". Já JDK significa "Java Development Kit", ou "Suíte de Desenvolvimento Java", sendo este usado pelo desenvolvedor e aquele usado pelo usuário que precisa usufruir de alguma aplicação Java. Ambos fazem uso da "Máquina Virtual do Java" (o mecanismo que traduzirá o código-fonte para código executável pelo computador): a chamada "JVM", ou "Java Virtual Machine". A compilação de um arquivo ".JAVA" em um binário ".CLASS" faz uso de ByteCode, o arquivo ".CLASS" não é executado nativamente por nenhum sistema operacional, esse arquivo é interpretado pela versão da JVM desenvolvida especificamente para o sistema operacional do cliente, o que possibilita que um código escrito apenas uma vez seja executado em vários sistemas operacionais diferentes - por isso o slogan do Java é que roda em tudo que é lugar. Seguindo no assunto inicial, ambos JRE e JDK têm o ambiente de execução Java integrado: "Java Runtime Environment" e "Java Virtual Machine" podem ser entendidos como sinônimos. A JDK também conta com o compilador de Java, que se chama JavaC, o JavaDoc (que lerá seus comentários e gerará a documentação Java) e dentro da JDK também há o código-fonte da API do Java, por exemplo: pode-se entrar na classe da String e ver como se deu a sua implementação. Por curiosidade, a IDE "Eclipse" tem um compilador interno, ou seja, se aliado ao JRE, está dispensada a exigência de instalação da JDK.